// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String  @id @default(cuid())
  externalId String  @unique
  username   String?
  firstName  String?
  lastName   String?
  imageUrl   String?
  emailId    String?

  Group        Group[]
  UserGroup    UsersGroups[]
  Expense      Expense[]
  ExpenseSplit ExpenseSplit[]
  Category     Category[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Group {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  createdBy   User          @relation(fields: [createdById], references: [id])
  createdById String
  UserGroup   UsersGroups[]
  Expense     Expense[]

  @@index([name])
  @@map("groups")
}

model UsersGroups {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  userId String

  group   Group  @relation(fields: [groupId], references: [id])
  groupId String

  @@unique([userId, groupId])
  @@index([userId])
  @@index([groupId])
  @@map("users_groups")
}

model Expense {
  id        String   @id @default(cuid())
  name      String
  amount    Int // amount in cents
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  createdBy   User   @relation(fields: [createdById], references: [id])
  createdById String

  group   Group  @relation(fields: [groupId], references: [id])
  groupId String

  ExpenseSplit    ExpenseSplit[]
  ExpenseCategory ExpenseCategory[]

  @@index([name])
  @@index([groupId])
  @@index([createdAt])
  @@index([createdById])
  @@map("expenses")
}

model ExpenseSplit {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  expense   Expense @relation(fields: [expenseId], references: [id])
  expenseId String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  amount Int // amount in cents

  @@unique([expenseId, userId])
  @@index([expenseId])
  @@index([userId])
  @@index([createdAt])
  @@map("expense_splits")
}

model Category {
  id        String   @id @default(cuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ExpenseCategory ExpenseCategory[]

  createdBy   User   @relation(fields: [createdById], references: [id])
  createdById String

  @@index([name])
  @@map("categories")
}

model ExpenseCategory {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  expense   Expense @relation(fields: [expenseId], references: [id])
  expenseId String

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String

  @@unique([expenseId, categoryId])
  @@map("expenses_categories")
}
